<!--
    IMPORTANT:
    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.
    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.
    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.
    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.
    - To remove a policy, delete the corresponding policy statement from the policy document.
    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.
    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.
    - Policies are applied in the order of their appearance, from the top down.
    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.
-->
<policies>
	<inbound>
		<set-variable name="ObjectId" value="@{&#xA;            JObject inBody = context.Request.Body.As&lt;JObject&gt;(preserveContent: true); &#xA;            string ObjectId = inBody.GetValue(&quot;objectId&quot;).ToString();&#xA;            return ObjectId;&#xA;        }" />
		<!-- validate parameters-->
		<choose>
			<when condition="@(((string)context.Variables[&quot;ObjectId&quot;]).ToLower().Equals(&quot;&quot;))">
				<return-response>
					<set-status code="500" reason="Invalid ObjectId specified." />
				</return-response>
			</when>
		</choose>
		<return-response>
			<set-status code="409" reason="Conflict" />
			<set-body>@{
                JObject data = new JObject();
                
                data.Add("userMessage","Please click here to resent your password: https://ajdhdkjdkjdkj.link");
                data.Add("status","409");
                data.Add("version","1.0");
                return data.ToString();
        }</set-body>
		</return-response>
	</inbound>
	<backend>
		<base />
	</backend>
	<outbound>
		<base />
	</outbound>
	<on-error>
		<base />
	</on-error>
</policies>